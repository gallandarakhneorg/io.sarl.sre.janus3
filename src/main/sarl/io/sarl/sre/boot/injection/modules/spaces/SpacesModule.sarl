/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2018 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.sre.boot.injection.modules.spaces

import com.google.inject.AbstractModule
import io.sarl.sre.spaces.SreEventSpaceSpecification
import io.sarl.sre.spaces.SreOpenEventSpaceSpecification
import io.sarl.sre.spaces.SreRestrictedAccessEventSpaceSpecification
import io.sarl.lang.core.EventSpaceSpecification
import io.sarl.util.OpenEventSpaceSpecification
import io.sarl.util.RestrictedAccessEventSpaceSpecification
import javax.inject.Singleton

/** 
 * Module configures SARL spaces.
 * 
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
public class SpacesModule extends AbstractModule {

	protected override configure {
		typeof(EventSpaceSpecification).bind.to(typeof(SreEventSpaceSpecification)).in(typeof(Singleton))
		typeof(OpenEventSpaceSpecification).bind.to(typeof(SreOpenEventSpaceSpecification)).in(typeof(Singleton))
		typeof(RestrictedAccessEventSpaceSpecification).bind.to(typeof(SreRestrictedAccessEventSpaceSpecification)).in(typeof(Singleton))
	}

}
