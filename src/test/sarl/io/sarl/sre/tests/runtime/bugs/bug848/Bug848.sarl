/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2019 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.sre.tests.runtime.bugs.bug848

import io.sarl.sre.tests.testutils.AbstractSreRunTest
import java.util.Collection
import java.util.UUID
import org.arakhne.afc.util.Triplet
import org.junit.Test

/** Tests for issue #848: Event AgentSpawned being received by spawned agent.
 *
 * <p>See: https://github.com/sarl/sarl/issues/848
 *
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @see "https://github.com/sarl/sarl/issues/848"
 */
class Bug848 extends AbstractSreRunTest {

	@Test
	def agentSpawnedReceiving_01 {
		typeof(TAgent1a).runSre(false)

		var bootAgent = getBootAgent
		assertEquals(2, getNumberOfResults(bootAgent))
		val childAgent = getResult(bootAgent, typeof(UUID), 0)
		assertNotNull(childAgent)
		var spawnEvents1 : Triplet<Boolean, UUID, Collection<UUID>> = getResult(bootAgent, typeof(Triplet), 1)
		assertNotNull(spawnEvents1)
		assertTrue(spawnEvents1.getA().booleanValue)
		assertEquals(bootAgent, spawnEvents1.b)
		assertEquals(1, spawnEvents1.getC().size)
		assertEquals(childAgent, spawnEvents1.c.iterator.next)

		assertEquals(0, getNumberOfResults(childAgent))
	}

}
