/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2018 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.tests.runtime.internal

import io.sarl.core.AgentSpawned
import io.sarl.core.Behaviors
import io.sarl.core.ContextLeft
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.InnerContextAccess
import io.sarl.core.Lifecycle
import io.sarl.core.Logging
import io.sarl.sre.tests.testutils.TestingAgent
import io.sarl.core.Schedules

/**
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
package agent RootAgent3 extends TestingAgent {

	uses Lifecycle, InnerContextAccess, Logging, Behaviors, DefaultContextInteractions, Schedules

	override runAgentTest : RunPolicy {
		loggingName = "ROOT"
		in(500) [
			typeof(ChildAgent3).spawnInContext(innerContext, rawResultMap)
		]
		return null
	}

	on AgentSpawned [typeof(ChildAgent3).name == occurrence.agentType] {
		typeof(Child2Agent3).spawn(rawResultMap, innerContext)
	}
	
	on ContextLeft [!occurrence.isInDefaultSpace] {
		addResult("ROOT")
	}

	on Bye {
		info("Child2 said Bye!")
		wake(new Bye)
		killMe
	}

}
