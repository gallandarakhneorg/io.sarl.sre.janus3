/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2018 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.tests.runtime.services.context

import io.sarl.sre.tests.testutils.AbstractSreRunTest
import org.junit.Test

import static org.junit.Assert.assertNotNull

/**
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
abstract class AbstractSpaceRepositoryTest extends AbstractSreRunTest {

	@Test
	def createSpace {
	typeof(CreateSpaceTestAgent).runSre(false, true, STANDARD_TIMEOUT)
		var results = getResults
		assertNotNull(results)
		assertContains(results, "FOUND")
	}

	@Test
	def getOrCreateSpaceWithID {
		typeof(GetOrCreateSpaceWithIDTestAgent).runSre(false, true, STANDARD_TIMEOUT)
		var results = getResults
		assertNotNull(results)
		assertContains(results, "FOUND1", "FOUND2")
	}

	@Test
	def getOrCreateSpaceWithSpec {
		typeof(GetOrCreateSpaceWithSpecTestAgent).runSre(false, true, STANDARD_TIMEOUT)
		var results = getResults
		assertNotNull(results)
		assertContains(results, "FOUND2", "IS_DEFAULT_SPACE")
	}

	@Test
	def getSpace {
		typeof(GetSpaceTestAgent).runSre(false, true, STANDARD_TIMEOUT)
		var results = getResults
		assertNotNull(results)
		assertContains(results, "FOUND", "IS_DEFAULT_SPACE")
	}

	@Test
	def getSpaces {
		typeof(GetSpacesTestAgent).runSre(false, true, STANDARD_TIMEOUT)
		var results = getResults
		assertNotNull(results)
		assertContains(results, "1/OpenEventSpaceSpecification", "2/OpenEventSpaceSpecification", "2/MySpaceSpec")
	}

	@Test
	def getSpacesClass {
		typeof(GetSpacesClassTestAgent).runSre(false, true, STANDARD_TIMEOUT)
		var results = getResults
		assertNotNull(results)
		assertContains(results, "1/OpenEventSpaceSpecification", "2/OpenEventSpaceSpecification",
				"3/MySpaceSpec", "3/MySpaceSpec")
	}

}
