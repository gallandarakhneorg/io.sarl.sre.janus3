/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2019 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.tests.runtime.bugs.bug794

import io.sarl.sre.tests.runtime.bugs.bug794.mocks.SpawnerAgent1
import io.sarl.sre.tests.runtime.bugs.bug794.mocks.SpawnerAgent10
import io.sarl.sre.tests.runtime.bugs.bug794.mocks.SpawnerAgent2
import io.sarl.sre.tests.runtime.bugs.bug794.mocks.SpawnerAgent200
import io.sarl.sre.tests.runtime.bugs.bug794.mocks.SpawnerAgent3
import io.sarl.sre.tests.runtime.bugs.bug794.mocks.SpawnerAgent4
import io.sarl.sre.tests.runtime.bugs.bug794.mocks.SpawnerAgent5
import io.sarl.sre.tests.runtime.bugs.bug794.mocks.SpawnerAgent6
import io.sarl.sre.tests.runtime.bugs.bug794.mocks.SpawnerAgent7
import io.sarl.sre.tests.runtime.bugs.bug794.mocks.SpawnerAgent8
import io.sarl.sre.tests.runtime.bugs.bug794.mocks.SpawnerAgent9
import io.sarl.sre.tests.testutils.AbstractSreRunTest
import org.junit.Test

/**
 * Unit test for the issue #794: Spawn function first parameter strange behavior.
 * 
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @see https://github.com/sarl/sarl/issues/794
 */
class Bug794 extends AbstractSreRunTest {

	@Test
	def spawn1 {
		typeof(SpawnerAgent1).runSre(false)
		assertEquals(1, getResults.size)
		assertAllDifferents(getResults)
	}

	@Test
	def spawn2 {
		typeof(SpawnerAgent2).runSre(false)
		assertEquals(2, getResults.size)
		assertAllDifferents(getResults)
	}

	@Test
	def spawn3 {
		typeof(SpawnerAgent3).runSre(false)
		assertEquals(3, getResults.size)
		assertAllDifferents(getResults)
	}

	@Test
	def spawn4 {
		typeof(SpawnerAgent4).runSre(false)
		assertEquals(4, getResults.size)
		assertAllDifferents(getResults)
	}

	@Test
	def spawn5 {
		typeof(SpawnerAgent5).runSre(false)
		assertEquals(5, getResults.size)
		assertAllDifferents(getResults)
	}

	@Test
	def spawn6 {
		typeof(SpawnerAgent6).runSre(false)
		assertEquals(6, getResults.size)
		assertAllDifferents(getResults)
	}

	@Test
	def spawn7 {
		typeof(SpawnerAgent7).runSre(false)
		assertEquals(7, getResults.size)
		assertAllDifferents(getResults)
	}

	@Test
	def spawn8 {
		typeof(SpawnerAgent8).runSre(false)
		assertEquals(8, getResults.size)
		assertAllDifferents(getResults)
	}

	@Test
	def spawn9 {
		typeof(SpawnerAgent9).runSre(false)
		assertEquals(9, getResults.size)
		assertAllDifferents(getResults)
	}

	@Test
	def spawn10 {
		typeof(SpawnerAgent10).runSre(false)
		assertEquals(10, getResults.size)
		assertAllDifferents(getResults)
	}

	@Test
	def spawn200 {
		typeof(SpawnerAgent200).runSre(false)
		assertEquals(200, getResults.size)
		assertAllDifferents(getResults)
	}


}
