/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2019 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.tests.runtime.boot.shutdown

import io.sarl.sre.tests.runtime.boot.shutdown.mocks.ShutdownAgent1Mock
import io.sarl.sre.tests.runtime.boot.shutdown.mocks.ShutdownAgent2Mock
import io.sarl.sre.tests.testutils.AbstractSreRunTest
import org.junit.Test

/**
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
class ShutdownTest extends AbstractSreRunTest {

	@Test
	def shutdownWithoutAgent {
		setupTheSreKernel(false, true)
		val handler = startTimeOut(false)
		try {
			this.bootstrap.shutdown(true)
		} finally {
			handler.stop
		}
		assertFalse(this.sreKernel.isRunning)
	}

	@Test
	def shutdownWithAgent1 {
		setupTheSreKernel(typeof(ShutdownAgent1Mock), false, true)
		val handler = startTimeOut
		try {
			bootstrap.shutdown(true)
		} finally {
			handler.stop
		}
		assertFalse(this.sreKernel.isRunning)
	}

	@Test
	def shutdownWithAgent2 {
		setupTheSreKernel(typeof(ShutdownAgent2Mock), false, true)
		val handler = startTimeOut
		try {
			bootstrap.shutdown(true)
		} finally {
			handler.stop
		}
		assertFalse(this.sreKernel.isRunning)
	}

}
