/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2019 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.tests.runtime.internal

import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Lifecycle
import io.sarl.core.Schedules
import io.sarl.core.SpaceCreated
import io.sarl.sre.tests.testutils.TestingAgent

/**
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
package agent MyWaiterAgent4 extends TestingAgent {

	uses Schedules, Lifecycle, DefaultContextInteractions

	override runAgentTest : RunPolicy {
		in(500) [
			typeof(MySpawnedAgent4).spawn(rawResultMap)
		]
		return null
	}

	on SpaceCreated {
		var data = new Data
		data.label = "SPAWNER"
		data.spaceID = occurrence.spaceID
		data.source = occurrence.source
		data.defaultSpaceID = defaultSpace.spaceID
		addResult(data)
		killMe
	}

}
