/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2019 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.tests.runtime.services.context.mocks

import io.sarl.core.DefaultContextInteractions
import io.sarl.core.OpenEventSpaceSpecification
import io.sarl.sre.tests.testutils.TestingAgent
import java.util.UUID

import static org.junit.Assert.*

/**
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
agent GetOrCreateSpaceWithSpecTestAgent extends TestingAgent {

	uses DefaultContextInteractions

	override runAgentTest : RunPolicy {
		var id = UUID::randomUUID
		var ctx = defaultContext
		var ^space = ctx.getOrCreateSpaceWithSpec(typeof(OpenEventSpaceSpecification), id)
		assert ^space !== null
		if (ctx.defaultSpace.spaceID == ^space.spaceID) {
			addResult("IS_DEFAULT_SPACE")
		}
		for (sp : ctx.spaces) {
			if (id == sp.spaceID.ID) {
			addResult("FOUND1")
			}
		}
		var space2 = ctx.getOrCreateSpaceWithSpec(typeof(OpenEventSpaceSpecification), id)
		assert space2 !== null
		assertSame(^space, space2)
		
		var space3 = ctx.getOrCreateSpaceWithSpec(typeof(MySpaceSpec), id)
		for (sp : ctx.spaces) {
			if (id == sp.spaceID.ID) {
				addResult("FOUND2")
			}
		}
		var space4 = ctx.getOrCreateSpaceWithSpec(typeof(MySpaceSpec), id)
		assertSame(space3, space4)
		return RunPolicy::IMMEDIATE_KILLING
	}

}
