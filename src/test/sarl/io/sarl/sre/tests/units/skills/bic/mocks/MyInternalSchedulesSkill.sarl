/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2019 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.tests.units.skills.bic.mocks

import io.sarl.core.AgentTask
import io.sarl.lang.core.Agent
import io.sarl.lang.core.Behavior
import io.sarl.lang.util.SynchronizedSet
import io.sarl.sre.capacities.InternalSchedules

/**
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
skill MyInternalSchedulesSkill implements InternalSchedules {

	override getActiveTasks : SynchronizedSet<String> {
		null
	}

	override in(task : AgentTask, delay : long, procedure : (Agent)=>void) : AgentTask {
		null
	}

	override at(task : AgentTask = null, time : long, procedure : (Agent)=>void) : AgentTask {
		null
	}

	override task(name : String) : AgentTask {
		null
	}

	override setName(task : AgentTask, name : String) {
	}

	override cancel(task : AgentTask, mayInterruptIfRunning : boolean) : boolean {
		false
	}

	override isCanceled(task : AgentTask) : boolean {
		false
	}

	override every(task : AgentTask, period : long, procedure : (Agent)=>void) : AgentTask {
		null
	}

	override atFixedDelay(task : AgentTask, delay : long, procedure : (Agent)=>void) : AgentTask {
		null
	}

	override execute(task : AgentTask, procedure : (Agent)=>void) : AgentTask {
		null
	}

	override unregisterTasksForBehavior(^behavior : Behavior) {
	}

	override releaseInternalResources(^behavior : Behavior) {
	}
	
}