/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2019 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.tests.units.naming

import io.sarl.sre.naming.NameParser
import io.sarl.sre.naming.BehaviorName
import io.sarl.sre.naming.BehaviorSchemeNameParser
import io.sarl.sre.naming.SarlName
import io.sarl.tests.api.AbstractSarlTest
import io.sarl.tests.api.Nullable
import java.net.URI
import java.util.UUID
import org.junit.Before
import org.junit.Test
import io.sarl.sre.tests.units.naming.mocks.CapacityMock
import io.sarl.sre.tests.units.naming.mocks.BehaviorMock

/**
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
class BehaviorSchemeNameParserTest extends AbstractSarlTest {

	protected static val CONTEXT_ID = "2a2c6de4-8327-431b-a916-97a05caafe14"

	protected static val SPACE_ID = "bb0d92be-1730-4453-a284-bd66d31b853f"

	protected static val AGENT_ID = "a0875b30-cff3-4461-9b96-f501e6c6a788"

	protected static val SKILL_ID = typeof(CapacityMock).name

	protected static val BEHAVIOR_ID = typeof(BehaviorMock).name

	protected static val BEHAVIOR_IDX = 8

	@Nullable
	var parser : NameParser

	@Before
	def setUp : void {
		this.parser = new NameParser
		this.parser.addSchemeNameParser(new BehaviorSchemeNameParser)
	}

	protected static def createURI(value : String) : URI {
		URI::create(value)
	}

	protected def createNormalizedURI(value : String) : URI {
		this.parser.normalize(value.createURI)
	}

	private static def toUUID(s : String) : UUID {
		UUID::fromString(s)
	}

	private static def m(index : int, e : String*) : String{
		val b = new StringBuilder
		for (elt : e) {
			if (!elt.isNullOrEmpty) {
				b.append("/").append(elt)
			}
		}
		if (index >= 0) {
			b.append("/").append(index)
		}
		return b.toString
	}

	protected static def assertValid(uri : URI, s : String, fragment : String = null, kindex : int, elements : String*) : void {
		uri.assertNotNull
		s.assertEquals(uri.scheme)
		m(kindex, elements).assertEquals(uri.path)
		if (fragment.isNullOrEmpty) {
			uri.fragment.assertNullOrEmpty
		} else {
			fragment.assertEquals(uri.fragment)
		}
		uri.host.assertNullOrEmpty
		uri.port.assertEquals(-1)
		uri.query.assertNullOrEmpty
		uri.userInfo.assertNullOrEmpty
	}

	protected static def assertValid(name : SarlName, s : String, fragment : String = null, kindex : int, elements : String*) : void {
		name.assertNotNull
		name.toURI.assertValid(s, fragment, kindex, elements)
		if (fragment.isNullOrEmpty) {
			name.fragment.assertNullOrEmpty
		} else {
			fragment.assertEquals(name.fragment)
		}
		val n = name as BehaviorName
		if (n.contextId === null) {
			n.contextId.assertNull
			n.spaceId.assertNull
			elements.get(0).toUUID.assertEquals(n.agentId)
			elements.get(1).assertEquals(n.behaviorType.name)
			if (elements.length != 2) {
				3.assertEquals(elements.length)
				elements.get(2).assertEquals(BEHAVIOR_IDX)
			}
		} else if (n.spaceId === null) {
			elements.get(0).toUUID.assertEquals(n.contextId)
			n.spaceId.assertNull
			elements.get(1).toUUID.assertEquals(n.agentId)
			elements.get(2).assertEquals(n.behaviorType.name)
			if (elements.length != 3) {
				4.assertEquals(elements.length)
				elements.get(3).assertEquals(BEHAVIOR_IDX)
			}
		} else {
			elements.get(0).toUUID.assertEquals(n.contextId)
			elements.get(1).toUUID.assertEquals(n.spaceId)
			elements.get(2).toUUID.assertEquals(n.agentId)
			elements.get(3).assertEquals(n.behaviorType.name)
			if (elements.length != 4) {
				5.assertEquals(elements.length)
				elements.get(4).assertEquals(BEHAVIOR_IDX)
			}
		}
	}

	@Test
	def decode_String_00 {
		this.parser.decode("behavior:").assertNull
	}

	@Test
	def decode_String_01 {
		this.parser.decode("behavior://" + BEHAVIOR_ID).assertNull
	}

	@Test
	def decode_String_02 {
		this.parser.decode("behavior://" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).assertNull
	}

	@Test
	def decode_String_03 {
		this.parser.decode("behavior://" + AGENT_ID + "/" + BEHAVIOR_ID).assertValid(
			"behavior", -1, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_04 {
		this.parser.decode("behavior://" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).assertValid("behavior",
			BEHAVIOR_IDX, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_05 {
		this.parser.decode("behavior://" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID).assertValid("behavior", -1,
			CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_06 {
		this.parser.decode("behavior://" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).
			assertValid("behavior", BEHAVIOR_IDX, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_07 {
		this.parser.decode("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID).assertValid(
			"behavior", -1, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_08 {
		this.parser.decode("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
			BEHAVIOR_IDX).assertValid("behavior", BEHAVIOR_IDX, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_09 {
		this.parser.decode("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/xxx").
			assertNull
	}

	@Test
	def decode_String_10 {
		this.parser.decode("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
			BEHAVIOR_IDX + "/xxx").assertNull
	}

	@Test
	def decode_String_11 {
		this.parser.decode("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/xxx/" +
				BEHAVIOR_IDX).assertNull
	}

	@Test
	def decode_String_12 {
		this.parser.decode("behavior:/" + BEHAVIOR_ID).assertNull
	}

	@Test
	def decode_String_13 {
		this.parser.decode("behavior:/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).assertNull
	}

	@Test
	def decode_String_14 {
		this.parser.decode("behavior:/" + AGENT_ID + "/" + BEHAVIOR_ID).assertValid("behavior", -1, AGENT_ID,
			BEHAVIOR_ID)
	}

	@Test
	def decode_String_15 {
		this.parser.decode("behavior:/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).
			assertValid("behavior", BEHAVIOR_IDX, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_16 {
		this.parser.decode("behavior:/" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID).assertValid("behavior",
			-1, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_17 {
		this.parser.decode("behavior:/" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).
			assertValid("behavior", BEHAVIOR_IDX, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_18 {
		this.parser.decode("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID).
			assertValid("behavior", -1, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_19 {
		this.parser.decode("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
			BEHAVIOR_IDX).assertValid("behavior", BEHAVIOR_IDX, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_20 {
		this.parser.decode("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID +
			"/xxx").assertNull
	}

	@Test
	def decode_String_21 {
		this.parser.decode("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
				BEHAVIOR_IDX + "/xxx").assertNull
	}

	@Test
	def decode_String_22 {
		this.parser.decode(
			"behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/xxx/" +
			BEHAVIOR_IDX).assertNull
	}

	@Test
	def decode_String_23 {
		this.parser.decode("behavior:" + BEHAVIOR_ID).assertNull
	}

	@Test
	def decode_String_24 {
		this.parser.decode("behavior:" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).assertNull
	}

	@Test
	def decode_String_25 {
		this.parser.decode("behavior:" + AGENT_ID + "/" + BEHAVIOR_ID).assertValid("behavior", -1, AGENT_ID,
			BEHAVIOR_ID)
	}

	@Test
	def decode_String_26 {
		this.parser.decode("behavior:" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).
			assertValid("behavior", BEHAVIOR_IDX, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_27 {
		this.parser.decode("behavior:" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID).assertValid("behavior",
			-1, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_28 {
		this.parser.decode("behavior:" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).
			assertValid("behavior", BEHAVIOR_IDX, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_29 {
		this.parser.decode("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID).
			assertValid("behavior", -1, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_30 {
		this.parser.decode("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
			BEHAVIOR_IDX).assertValid("behavior", BEHAVIOR_IDX, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_31 {
		this.parser.decode("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID +
			"/xxx").assertNull
	}

	@Test
	def decode_String_32 {
		this.parser.decode("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
				BEHAVIOR_IDX + "/xxx").assertNull
	}

	@Test
	def decode_String_33 {
		this.parser.decode(
			"behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/xxx/" +
			BEHAVIOR_IDX).assertNull
	}

	@Test
	def decode_String_fragment_00 {
		this.parser.decode("behavior:#frag").assertNull
	}

	@Test
	def decode_String_fragment_01 {
		this.parser.decode("behavior://" + BEHAVIOR_ID + "#frag").assertNull
	}

	@Test
	def decode_String_fragment_02 {
		this.parser.decode("behavior://" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX + "#frag").assertNull
	}

	@Test
	def decode_String_fragment_03 {
		this.parser.decode("behavior://" + AGENT_ID + "/" + BEHAVIOR_ID + "#frag").assertValid("behavior",
			"frag", -1, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_fragment_04 {
		this.parser.decode("behavior://" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX + "#frag").
			assertValid("behavior", "frag", BEHAVIOR_IDX, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_fragment_05 {
		this.parser.decode("behavior://" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "#frag").
			assertValid("behavior", "frag", -1, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_fragment_06 {
		this.parser.decode("behavior://" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX
			+ "#frag").assertValid("behavior", "frag", BEHAVIOR_IDX, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_fragment_07 {
		this.parser.decode("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID
			+ "#frag").assertValid("behavior", "frag", -1, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_fragment_08 {
		this.parser.decode("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
			BEHAVIOR_IDX + "#frag").assertValid("behavior", "frag", BEHAVIOR_IDX, CONTEXT_ID, SPACE_ID,
			AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_fragment_09 {
		this.parser.decode("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID +
			"/xxx#frag").assertNull
	}

	@Test
	def decode_String_fragment_10 {
		this.parser.decode("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
				BEHAVIOR_IDX + "/xxx#frag").assertNull
	}

	@Test
	def decode_String_fragment_11 {
		this.parser.decode(
			"behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/xxx/" +
			BEHAVIOR_IDX + "#frag").assertNull
	}

	@Test
	def decode_String_fragment_12 {
		this.parser.decode("behavior:/" + BEHAVIOR_ID + "#frag").assertNull
	}

	@Test
	def decode_String_fragment_13 {
		this.parser.decode("behavior:/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX + "#frag").assertNull
	}

	@Test
	def decode_String_fragment_14 {
		this.parser.decode("behavior:/" + AGENT_ID + "/" + BEHAVIOR_ID + "#frag").assertValid("behavior",
			"frag", -1, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_fragment_15 {
		this.parser.decode("behavior:/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX + "#frag").assertValid(
			"behavior", "frag", BEHAVIOR_IDX, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_fragment_16 {
		this.parser.decode("behavior:/" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "#frag").assertValid(
			"behavior", "frag", -1, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_fragment_17 {
		this.parser.decode("behavior:/" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX
			+ "#frag").assertValid("behavior", "frag", BEHAVIOR_IDX, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_fragment_18 {
		this.parser.decode("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "#frag").
			assertValid("behavior", "frag", -1, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_fragment_19 {
		this.parser.decode("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
			BEHAVIOR_IDX + "#frag").assertValid("behavior", "frag", BEHAVIOR_IDX, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_fragment_20 {
		this.parser.decode("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID +
			"/xxx#frag").assertNull
	}

	@Test
	def decode_String_fragment_21 {
		this.parser.decode("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
				BEHAVIOR_IDX + "/xxx#frag").assertNull
	}

	@Test
	def decode_String_fragment_22 {
		this.parser.decode(
			"behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/xxx/" +
			BEHAVIOR_IDX + "#frag").assertNull
	}

	@Test
	def decode_String_fragment_23 {
		this.parser.decode("behavior:" + BEHAVIOR_ID + "#frag").assertNull
	}

	@Test
	def decode_String_fragment_24 {
		this.parser.decode("behavior:" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX + "#frag").assertNull
	}

	@Test
	def decode_String_fragment_25 {
		this.parser.decode("behavior:" + AGENT_ID + "/" + BEHAVIOR_ID + "#frag").assertValid("behavior", "frag", -1,
			AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_fragment_26 {
		this.parser.decode("behavior:" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX + "#frag").assertValid(
			"behavior", "frag", BEHAVIOR_IDX, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_fragment_27 {
		this.parser.decode("behavior:" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "#frag").assertValid(
			"behavior", "frag", -1, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_fragment_28 {
		this.parser.decode("behavior:" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX +
			"#frag").assertValid("behavior", "frag", BEHAVIOR_IDX, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_fragment_29 {
		this.parser.decode("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "#frag").
			assertValid("behavior", "frag", -1, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_String_fragment_30 {
		this.parser.decode("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
			BEHAVIOR_IDX + "#frag").assertValid("behavior", "frag", BEHAVIOR_IDX, CONTEXT_ID, SPACE_ID, AGENT_ID,
			BEHAVIOR_ID)
	}

	@Test
	def decode_String_fragment_31 {
		this.parser.decode("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID +
			"/xxx#frag").assertNull
	}

	@Test
	def decode_String_fragment_32 {
		this.parser.decode("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
				BEHAVIOR_IDX + "/xxx#frag").assertNull
	}

	@Test
	def decode_String_fragment_33 {
		this.parser.decode(
			"behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/xxx/" +
			BEHAVIOR_IDX + "#frag").assertNull
	}

	@Test
	def normalize_URI_00 {
		this.parser.normalize(("behavior://" + BEHAVIOR_ID).createURI).assertNull
	}

	@Test
	def normalize_URI_01 {
		this.parser.normalize(("behavior://" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).createURI).assertNull
	}

	@Test
	def normalize_URI_02 {
		this.parser.normalize(("behavior://" + AGENT_ID + "/" + BEHAVIOR_ID).createURI).assertValid("behavior", -1,
			AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_03 {
		this.parser.normalize(("behavior://" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).createURI).
			assertValid("behavior", BEHAVIOR_IDX, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_04 {
		this.parser.normalize(("behavior://" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID).createURI).
			assertValid("behavior", -1, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_05 {
		this.parser.normalize(
			("behavior://" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).createURI).
			assertValid("behavior", BEHAVIOR_IDX, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_06 {
		this.parser.normalize(
			("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID).createURI).
			assertValid("behavior", -1, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_07 {
		this.parser.normalize(("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
			BEHAVIOR_IDX).createURI).assertValid("behavior", BEHAVIOR_IDX, CONTEXT_ID, SPACE_ID, AGENT_ID,
			BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_08 {
		this.parser.normalize(("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID +
			"/xxx").createURI).assertNull
	}

	@Test
	def normalize_URI_09 {
		this.parser.normalize(("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
				BEHAVIOR_IDX + "/xxx").createURI).assertNull
	}

	@Test
	def normalize_URI_10 {
		this.parser.normalize((
			"behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/xxx/" +
			BEHAVIOR_IDX).createURI).assertNull
	}

	@Test
	def normalize_URI_11 {
		this.parser.normalize(("behavior:/" + BEHAVIOR_ID).createURI).assertNull
	}

	@Test
	def normalize_URI_12 {
		this.parser.normalize(("behavior:/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).createURI).assertNull
	}

	@Test
	def normalize_URI_13 {
		this.parser.normalize(("behavior:/" + AGENT_ID + "/" + BEHAVIOR_ID).createURI).assertValid("behavior", -1,
			AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_14 {
		this.parser.normalize(("behavior:/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).createURI).
			assertValid("behavior", BEHAVIOR_IDX, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_15 {
		this.parser.normalize(("behavior:/" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID).createURI).
			assertValid("behavior", -1, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_16 {
		this.parser.normalize(
			("behavior:/" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).createURI).
			assertValid("behavior", BEHAVIOR_IDX, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_17 {
		this.parser.normalize(
			("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID).createURI).
			assertValid("behavior", -1, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_18 {
		this.parser.normalize(("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
			BEHAVIOR_IDX).createURI).assertValid("behavior", BEHAVIOR_IDX, CONTEXT_ID, SPACE_ID, AGENT_ID,
			BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_19 {
		this.parser.normalize(("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID +
			"/xxx").createURI).assertNull
	}

	@Test
	def normalize_URI_20 {
		this.parser.normalize(("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
				BEHAVIOR_IDX + "/xxx").createURI).assertNull
	}

	@Test
	def normalize_URI_21 {
		this.parser.normalize((
			"behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/xxx/" +
			BEHAVIOR_IDX).createURI).assertNull
	}

	@Test
	def normalize_URI_22 {
		this.parser.normalize(("behavior:" + BEHAVIOR_ID).createURI).assertNull
	}

	@Test
	def normalize_URI_23 {
		this.parser.normalize(("behavior:" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).createURI).assertNull
	}

	@Test
	def normalize_URI_24 {
		this.parser.normalize(("behavior:" + AGENT_ID + "/" + BEHAVIOR_ID).createURI).assertValid("behavior", -1,
			AGENT_ID,
			BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_25 {
		this.parser.normalize(("behavior:" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).createURI).
			assertValid("behavior", BEHAVIOR_IDX, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_26 {
		this.parser.normalize(("behavior:" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID).createURI).
			assertValid("behavior", -1, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_27 {
		this.parser.normalize(
			("behavior:" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).createURI).
			assertValid("behavior", BEHAVIOR_IDX, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_28 {
		this.parser.normalize(
			("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID).createURI).
			assertValid("behavior", -1, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_29 {
		this.parser.normalize(("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
			BEHAVIOR_IDX).createURI).assertValid("behavior", BEHAVIOR_IDX, CONTEXT_ID, SPACE_ID, AGENT_ID,
			BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_30 {
		this.parser.normalize(("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID +
			"/xxx").createURI).assertNull
	}

	@Test
	def normalize_URI_31 {
		this.parser.normalize(("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
				BEHAVIOR_IDX + "/xxx").createURI).assertNull
	}

	@Test
	def normalize_URI_32 {
		this.parser.normalize((
			"behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/xxx/" +
			BEHAVIOR_IDX).createURI).assertNull
	}

	@Test
	def normalize_URI_fragment_00 {
		this.parser.normalize(("behavior://" + BEHAVIOR_ID + "#frag").createURI).assertNull
	}

	@Test
	def normalize_URI_fragment_01 {
		this.parser.normalize(("behavior://" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX + "#frag").createURI).assertNull
	}

	@Test
	def normalize_URI_fragment_02 {
		this.parser.normalize(("behavior://" + AGENT_ID + "/" + BEHAVIOR_ID + "#frag").createURI).
			assertValid("behavior", "frag", -1, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_fragment_03 {
		this.parser.normalize(
			("behavior://" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX + "#frag").createURI).
			assertValid("behavior", "frag", BEHAVIOR_IDX, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_fragment_04 {
		this.parser.normalize(
			("behavior://" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "#frag").createURI).
			assertValid("behavior", "frag", -1, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_fragment_05 {
		this.parser.normalize(
			("behavior://" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX + "#frag").
			createURI).assertValid("behavior", "frag", BEHAVIOR_IDX, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_fragment_06 {
		this.parser.normalize(("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID
			+ "#frag").createURI).assertValid("behavior", "frag", -1, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_fragment_07 {
		this.parser.normalize(("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
				BEHAVIOR_IDX + "#frag").createURI).assertValid("behavior", "frag", BEHAVIOR_IDX, CONTEXT_ID,
			SPACE_ID,
			AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_fragment_08 {
		this.parser.normalize(("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID +
			"/xxx#frag").createURI).assertNull
	}

	@Test
	def normalize_URI_fragment_09 {
		this.parser.normalize(("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
				BEHAVIOR_IDX + "/xxx#frag").createURI).assertNull
	}

	@Test
	def normalize_URI_fragment_10 {
		this.parser.normalize((
			"behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/xxx/" +
			BEHAVIOR_IDX + "#frag").createURI).assertNull
	}

	@Test
	def normalize_URI_fragment_11 {
		this.parser.normalize(("behavior:/" + BEHAVIOR_ID + "#frag").createURI).assertNull
	}

	@Test
	def normalize_URI_fragment_12 {
		this.parser.normalize(("behavior:/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX + "#frag").createURI).assertNull
	}

	@Test
	def normalize_URI_fragment_13 {
		this.parser.normalize(("behavior:/" + AGENT_ID + "/" + BEHAVIOR_ID + "#frag").createURI).
			assertValid("behavior", "frag", -1, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_fragment_14 {
		this.parser.normalize(
			("behavior:/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX + "#frag").createURI).assertValid(
			"behavior", "frag", BEHAVIOR_IDX, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_fragment_15 {
		this.parser.normalize(("behavior:/" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "#frag").createURI).
			assertValid("behavior", "frag", -1, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_fragment_16 {
		this.parser.normalize(("behavior:/" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX
			+ "#frag").createURI).assertValid("behavior", "frag", BEHAVIOR_IDX, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_fragment_17 {
		this.parser.normalize(("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID +
			"#frag").createURI).assertValid("behavior", "frag", -1, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_fragment_18 {
		this.parser.normalize(("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
				BEHAVIOR_IDX + "#frag").createURI).assertValid("behavior", "frag", BEHAVIOR_IDX, CONTEXT_ID,
			SPACE_ID,
			AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_fragment_19 {
		this.parser.normalize(("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID +
			"/xxx#frag").createURI).assertNull
	}

	@Test
	def normalize_URI_fragment_20 {
		this.parser.normalize(("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
				BEHAVIOR_IDX + "/xxx#frag").createURI).assertNull
	}

	@Test
	def normalize_URI_fragment_21 {
		this.parser.normalize((
			"behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/xxx/" +
			BEHAVIOR_IDX + "#frag").createURI).assertNull
	}

	@Test
	def normalize_URI_fragment_22 {
		this.parser.normalize(("behavior:" + BEHAVIOR_ID + "#frag").createURI).assertNull
	}

	@Test
	def normalize_URI_fragment_23 {
		this.parser.normalize(("behavior:" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX + "#frag").createURI).assertNull
	}

	@Test
	def normalize_URI_fragment_24 {
		this.parser.normalize(("behavior:" + AGENT_ID + "/" + BEHAVIOR_ID + "#frag").createURI).
			assertValid("behavior", "frag", -1, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_fragment_25 {
		this.parser.normalize(
			("behavior:" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX + "#frag").createURI).assertValid(
			"behavior", "frag", BEHAVIOR_IDX, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_fragment_26 {
		this.parser.normalize(("behavior:" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "#frag").createURI).
			assertValid(
			"behavior", "frag", -1, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_fragment_27 {
		this.parser.normalize(("behavior:" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX +
			"#frag").createURI).assertValid("behavior", "frag", BEHAVIOR_IDX, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_fragment_28 {
		this.parser.normalize(("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID +
			"#frag").createURI).assertValid("behavior", "frag", -1, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_fragment_29 {
		this.parser.normalize(("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
				BEHAVIOR_IDX + "#frag").createURI).assertValid("behavior", "frag", BEHAVIOR_IDX, CONTEXT_ID,
			SPACE_ID,
			AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def normalize_URI_fragment_30 {
		this.parser.normalize(("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID +
			"/xxx#frag").createURI).assertNull
	}

	@Test
	def normalize_URI_fragment_31 {
		this.parser.normalize(("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
				BEHAVIOR_IDX + "/xxx#frag").createURI).assertNull
	}

	@Test
	def normalize_URI_fragment_32 {
		this.parser.normalize((
			"behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/xxx/" +
			BEHAVIOR_IDX + "#frag").createURI).assertNull
	}

	@Test
	def decode_URI_00 {
		this.parser.decode(("behavior://" + AGENT_ID + "/" + BEHAVIOR_ID).createNormalizedURI).assertValid("behavior", -1,
			AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_01 {
		this.parser.decode(("behavior://" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).createNormalizedURI).
			assertValid("behavior", BEHAVIOR_IDX, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_02 {
		this.parser.decode(("behavior://" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID).createNormalizedURI).
			assertValid("behavior", -1, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_03 {
		this.parser.decode(
			("behavior://" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).createNormalizedURI).
			assertValid("behavior", BEHAVIOR_IDX, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_04 {
		this.parser.decode(
			("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID).createNormalizedURI).
			assertValid("behavior", -1, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_05 {
		this.parser.decode(
			("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).
			createNormalizedURI).assertValid("behavior", BEHAVIOR_IDX, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_06 {
		this.parser.decode(("behavior:/" + AGENT_ID + "/" + BEHAVIOR_ID).createNormalizedURI).assertValid("behavior", -1,
			AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_07 {
		this.parser.decode(("behavior:/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).createNormalizedURI).
			assertValid("behavior", BEHAVIOR_IDX, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_08 {
		this.parser.decode(("behavior:/" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID).createNormalizedURI).
			assertValid("behavior", -1, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_09 {
		this.parser.decode(
			("behavior:/" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).createNormalizedURI).
			assertValid("behavior", BEHAVIOR_IDX, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_10 {
		this.parser.decode(
			("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID).createNormalizedURI).
			assertValid("behavior", -1, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_11 {
		this.parser.decode(
			("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).
			createNormalizedURI).assertValid("behavior", BEHAVIOR_IDX, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_12 {
		this.parser.decode(("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID +
			"/xxx").createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_13 {
		this.parser.decode(
			("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX +
			"/xxx").createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_14 {
		this.parser.decode((
			"behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/xxx/" +
			BEHAVIOR_IDX).createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_15 {
		this.parser.decode(("behavior:" + BEHAVIOR_ID).createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_16 {
		this.parser.decode(("behavior:" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_17 {
		this.parser.decode(("behavior:" + AGENT_ID + "/" + BEHAVIOR_ID).createNormalizedURI).assertValid("behavior", -1,
			AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_18 {
		this.parser.decode(("behavior:" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).createNormalizedURI).
			assertValid("behavior", BEHAVIOR_IDX, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_19 {
		this.parser.decode(("behavior:" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID).createNormalizedURI).
			assertValid("behavior", -1, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_20 {
		this.parser.decode(
			("behavior:" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).createNormalizedURI).
			assertValid("behavior", BEHAVIOR_IDX, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_21 {
		this.parser.decode(
			("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID).createNormalizedURI).
			assertValid("behavior", -1, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_22 {
		this.parser.decode(
			("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX).
			createNormalizedURI).assertValid("behavior", BEHAVIOR_IDX, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_23 {
		this.parser.decode(("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID +
			"/xxx").createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_24 {
		this.parser.decode(
			("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX +
			"/xxx").createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_25 {
		this.parser.decode((
			"behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/xxx/" +
			BEHAVIOR_IDX).createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_fragment_00 {
		this.parser.decode(("behavior://" + BEHAVIOR_ID + "#frag").createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_fragment_01 {
		this.parser.decode(("behavior://" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX + "#frag").createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_fragment_02 {
		this.parser.decode(("behavior://" + AGENT_ID + "/" + BEHAVIOR_ID + "#frag").createNormalizedURI).
			assertValid("behavior", "frag", -1, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_fragment_03 {
		this.parser.decode(
			("behavior://" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX + "#frag").createNormalizedURI).
			assertValid("behavior", "frag", BEHAVIOR_IDX, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_fragment_04 {
		this.parser.decode(
			("behavior://" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "#frag").createNormalizedURI).
			assertValid("behavior", "frag", -1, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_fragment_05 {
		this.parser.decode(
			("behavior://" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX + "#frag").
			createNormalizedURI).assertValid("behavior", "frag", BEHAVIOR_IDX, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_fragment_06 {
		this.parser.decode(("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID +
				"#frag").createNormalizedURI).assertValid("behavior", "frag", -1, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_fragment_07 {
		this.parser.decode(
			("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
				BEHAVIOR_IDX + "#frag").createNormalizedURI).assertValid("behavior", "frag", BEHAVIOR_IDX, CONTEXT_ID,
			SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_fragment_08 {
		this.parser.decode(("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID +
				"/xxx#frag").createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_fragment_09 {
		this.parser.decode(
			("behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX +
			"/xxx#frag").createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_fragment_10 {
		this.parser.decode((
			"behavior://" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/xxx/" +
			BEHAVIOR_IDX + "#frag").createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_fragment_11 {
		this.parser.decode(("behavior:/" + BEHAVIOR_ID + "#frag").createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_fragment_12 {
		this.parser.decode(("behavior:/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX + "#frag").createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_fragment_13 {
		this.parser.decode(("behavior:/" + AGENT_ID + "/" + BEHAVIOR_ID + "#frag").createNormalizedURI).
			assertValid("behavior", "frag", -1, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_fragment_14 {
		this.parser.decode(
			("behavior:/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX + "#frag").createNormalizedURI).assertValid(
			"behavior", "frag", BEHAVIOR_IDX, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_fragment_15 {
		this.parser.decode(("behavior:/" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "#frag").createNormalizedURI).
			assertValid("behavior", "frag", -1, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_fragment_16 {
		this.parser.decode(("behavior:/" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX +
				"#frag").createNormalizedURI).assertValid("behavior", "frag", BEHAVIOR_IDX, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_fragment_17 {
		this.parser.decode(("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID +
				"#frag").createNormalizedURI).assertValid("behavior", "frag", -1, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_fragment_18 {
		this.parser.decode(
			("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX +
			"#frag").createNormalizedURI).assertValid("behavior", "frag", BEHAVIOR_IDX, CONTEXT_ID, SPACE_ID, AGENT_ID,
			BEHAVIOR_ID)
	}

	@Test
	def decode_URI_fragment_19 {
		this.parser.decode(("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID +
				"/xxx#frag").createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_fragment_20 {
		this.parser.decode(
			("behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" +
				BEHAVIOR_IDX + "/xxx#frag").createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_fragment_21 {
		this.parser.decode((
			"behavior:/" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/xxx/" +
			BEHAVIOR_IDX + "#frag").createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_fragment_22 {
		this.parser.decode(("behavior:" + BEHAVIOR_ID + "#frag").createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_fragment_23 {
		this.parser.decode(("behavior:" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX + "#frag").createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_fragment_24 {
		this.parser.decode(("behavior:" + AGENT_ID + "/" + BEHAVIOR_ID + "#frag").createNormalizedURI).
			assertValid("behavior", "frag", -1, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_fragment_25 {
		this.parser.decode(
			("behavior:" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX + "#frag").createNormalizedURI).assertValid(
			"behavior", "frag", BEHAVIOR_IDX, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_fragment_26 {
		this.parser.decode(("behavior:" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "#frag").createNormalizedURI).
			assertValid("behavior", "frag", -1, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_fragment_27 {
		this.parser.decode(("behavior:" + CONTEXT_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX +
				"#frag").createNormalizedURI).assertValid("behavior", "frag", BEHAVIOR_IDX, CONTEXT_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_fragment_28 {
		this.parser.decode(("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID +
				"#frag").createNormalizedURI).assertValid("behavior", "frag", -1, CONTEXT_ID, SPACE_ID, AGENT_ID, BEHAVIOR_ID)
	}

	@Test
	def decode_URI_fragment_29 {
		this.parser.decode(
			("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX +
			"#frag").createNormalizedURI).assertValid("behavior", "frag", BEHAVIOR_IDX, CONTEXT_ID, SPACE_ID, AGENT_ID,
			BEHAVIOR_ID)
	}

	@Test
	def decode_URI_fragment_30 {
		this.parser.decode(("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID +
				"/xxx#frag").createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_fragment_31 {
		this.parser.decode(
			("behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/" + BEHAVIOR_IDX +
			"/xxx#frag").createNormalizedURI).assertNull
	}

	@Test
	def decode_URI_fragment_32 {
		this.parser.decode((
			"behavior:" + CONTEXT_ID + "/" + SPACE_ID + "/" + AGENT_ID + "/" + BEHAVIOR_ID + "/xxx/" +
			BEHAVIOR_IDX + "#frag").createNormalizedURI).assertNull
	}

}
