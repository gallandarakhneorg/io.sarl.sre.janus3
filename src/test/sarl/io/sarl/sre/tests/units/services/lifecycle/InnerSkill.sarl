/* 
 * $Id$
 * 
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 * 
 * Copyright (C) 2014-2018 the original authors or authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.sre.tests.units.services.lifecycle

import io.sarl.core.InnerContextAccess
import io.sarl.lang.core.AgentContext
import io.sarl.lang.core.Event
import io.sarl.lang.core.Space
import io.sarl.lang.core.SpaceID
import io.sarl.lang.util.SynchronizedIterable
import io.sarl.sre.skills.BuiltinSkill
import java.util.UUID
import java.util.concurrent.atomic.AtomicInteger

/** 
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
@SuppressWarnings("potential_field_synchronization_problem")
	package skill InnerSkill extends BuiltinSkill implements InnerContextAccess {

	val orderSource : AtomicInteger
	public var installOrder : Integer
	public var uninstallOrderPre : Integer
	public var uninstallOrderPost : Integer
		
	new (s : AtomicInteger) {
		this.orderSource = s
	}

	protected def install {
		this.installOrder = this.orderSource.getAndIncrement()
	}

	protected def uninstall(stage : UninstallationStage) {
		if (stage == UninstallationStage::PRE_DESTROY_EVENT) {
			this.uninstallOrderPre = this.orderSource.getAndIncrement
		} else {
			this.uninstallOrderPost = this.orderSource.getAndIncrement
		}
	}
	
	def getInstallationOrder : int {
		this.installOrder
	}
	
	def getInnerContext : AgentContext {
		null
	}
	
	def getMemberAgentCount : int {
		0
	}
	
	def getMemberAgents : SynchronizedIterable<UUID> {
		null
	}
	
	def hasMemberAgent : boolean {
		false
	}
	
	def isInInnerDefaultSpace(^event : Event) : boolean {
		false
	}
	
	def isInnerDefaultSpace(^space : Space) : boolean {
		false
	}
	
	def isInnerDefaultSpace(spaceID : SpaceID) : boolean {
		false
	}
	
	def isInnerDefaultSpace(spaceID : UUID) : boolean {
		false
	}
	
}
